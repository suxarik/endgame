# This is a basic workflow to help you get started with Actions

name: CI-queue-master

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches:
      - master
    paths:
      - sockshop/queue-master/**

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      GROUP: sockshopdemo 
      COMMIT: ${{ github.sha }}
      REPO: queue-master

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          repository: microservices-demo/queue-master
          ref: refs/heads/master

      - name: Java Installation
        uses: actions/setup-java@v1
        with:
          java-version: '8' # The JDK version to make available on the path.
          java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
          architecture: x64 # (x64 or x86) - defaults to x64

      - name: Build jar
        run: ./scripts/build.sh

      - name: Run unit tests
        run: ./test/test.sh unit.py

      # setup Docker buld action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Build image and push to ttl.sh
        uses: docker/build-push-action@v3
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./docker/queue-master/
          # Note: tags has to be all lower-case
          tags: ttl.sh/otus-endgame-queue-master:24h 
          push: true

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

